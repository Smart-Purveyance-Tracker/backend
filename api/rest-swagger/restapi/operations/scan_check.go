// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ScanCheckHandlerFunc turns a function with the right signature into a scan check handler
type ScanCheckHandlerFunc func(ScanCheckParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ScanCheckHandlerFunc) Handle(params ScanCheckParams) middleware.Responder {
	return fn(params)
}

// ScanCheckHandler interface for that can handle valid scan check params
type ScanCheckHandler interface {
	Handle(ScanCheckParams) middleware.Responder
}

// NewScanCheck creates a new http.Handler for the scan check operation
func NewScanCheck(ctx *middleware.Context, handler ScanCheckHandler) *ScanCheck {
	return &ScanCheck{Context: ctx, Handler: handler}
}

/*ScanCheck swagger:route POST /scanCheck scanCheck

Uploads a file.

*/
type ScanCheck struct {
	Context *middleware.Context
	Handler ScanCheckHandler
}

func (o *ScanCheck) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewScanCheckParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
