swagger: "2.0"
info:
  title: "test"
  description: "test"
  version: 1.0.0
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authenthication
    in: header
schemes:
  - http
paths:
  /status:
    get:
      operationId: "getStatus"
      produces:
        - "application/json"
      responses:
        200:
          description: "returns status of server"
          schema:
            properties:
              status:
                type: string
                example: OK
  /signup:
    post:
      operationId: "signup"
      consumes:
        - application/json
      produces:
        - "application/json"
      parameters:
        - name: "user info"
          in: body
          required: true
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          headers:
            Authenthication:
              type: string
          description: "returns user"
          schema:
            $ref: '#/definitions/user'
        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'

  /login:
    post:
      operationId: "login"
      consumes:
        - application/json
      produces:
        - "application/json"
      parameters:
        - name: "user info"
          in: body
          required: true
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          headers:
            Authenthication:
              type: string
          description: "returns user"
          schema:
            $ref: '#/definitions/user'
        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'

  /scanProducts:
    post:
      operationId: "scanProducts"
      summary: Uploads a file.
      security:
        - Bearer: [ ]
      consumes:
        - multipart/form-data
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/productCount'

        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'
      parameters:
        - in: formData
          name: upfile
          type: file
          description: The file to upload.
  /scanCheck:
    post:
      operationId: "scanCheck"
      summary: Uploads a file.
      security:
        - Bearer: [ ]
      consumes:
        - multipart/form-data
      responses:
        200:
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/productCount'

        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'
      parameters:
        - in: formData
          name: upfile
          type: file
          description: The file to upload.

  /product:
    post:
      operationId: "createProduct"
      security:
        - Bearer: [ ]
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: product
          required: true
          schema:
            $ref: '#/definitions/product'
          in: body
      responses:
        200:
          description: "creates product"
          schema:
            $ref: '#/definitions/product'
        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'

    get:
      operationId: "getProduct"
      security:
        - Bearer: [ ]
      parameters:
        - name: productID
          type: string
          required: true
          in: query
      responses:
        200:
          description: "get product"
          schema:
            $ref: '#/definitions/product'
        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'
    put:
      operationId: "updateProduct"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: "update product"
          schema:
            $ref: '#/definitions/product'
        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'

  /product/list:
    get:
      operationId: "productList"
      security:
        - Bearer: [ ]
      responses:
        200:
          description: "returns list of product"
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
        default:
          description: "error"
          schema:
            $ref: '#/definitions/error'
definitions:
  user:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
  product:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
      boughtAt:
        type: string
        format: "date-time"
      inStock:
        type: boolean

  productCount:
    type: object
    properties:
      count:
        type: integer
      product:
        type: object
        $ref: '#/definitions/product'

  error:
    type: object
    required:
      - message
    properties:
      message:
        type: string


